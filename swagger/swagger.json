{
  "openapi": "3.0.3",
  "info": {
    "title": "MTB API (Week 04)",
    "version": "1.0.0",
    "description": "Mountain Bikes API with Google OAuth login. Public GETs; write operations require login."
  },
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://cse341-week03-il6o.onrender.com" }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session cookie set after Google OAuth. Start at /auth/google to obtain it."
      }
    },
    "schemas": {
      "Bike": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "brandId": { "type": "string" },
          "name": { "type": "string" },
          "price": { "type": "number" }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" }
        }
      }
    }
  },
  "paths": {
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Start Google OAuth login",
        "responses": {
          "302": { "description": "Redirects to Google for login/consent" }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google OAuth callback",
        "responses": {
          "302": { "description": "Redirects to /auth/success on success, /auth/failure on error" }
        }
      }
    },
    "/auth/success": {
      "get": {
        "tags": ["Auth"],
        "summary": "Login success",
        "responses": {
          "200": { "description": "Returns a success message and user info" }
        }
      }
    },
    "/auth/failure": {
      "get": {
        "tags": ["Auth"],
        "summary": "Login failed",
        "responses": {
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current authenticated user",
        "responses": {
          "200": {
            "description": "Returns { authenticated: boolean, user?: {...} }"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout current user",
        "responses": {
          "204": { "description": "Logged out, session cleared" }
        }
      }
    },

    "/api/bikes": {
      "get": {
        "tags": ["Bikes"],
        "summary": "List bikes (public)",
        "responses": {
          "200": {
            "description": "Array of bikes",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Bike" } }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Bikes"],
        "summary": "Create a new bike (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "responses": {
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/bikes/{id}": {
      "get": {
        "tags": ["Bikes"],
        "summary": "Get a bike by id (public)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      },
      "put": {
        "tags": ["Bikes"],
        "summary": "Update a bike (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Bikes"],
        "summary": "Delete a bike (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "Deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      }
    },

    "/api/brands": {
      "get": {
        "tags": ["Brands"],
        "summary": "List brands (public)",
        "responses": {
          "200": {
            "description": "Array of brands",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Brand" } }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Brands"],
        "summary": "Create a new brand (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "responses": { "201": { "description": "Created" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/api/brands/{id}": {
      "get": {
        "tags": ["Brands"],
        "summary": "Get a brand by id (public)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      },
      "put": {
        "tags": ["Brands"],
        "summary": "Update a brand (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Updated" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["Brands"],
        "summary": "Delete a brand (requires login)",
        "security": [ { "cookieAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "Deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" }
        }
      }
    }
  },
  "tags": [
    { "name": "Auth" },
    { "name": "Bikes" },
    { "name": "Brands" }
  ]
}
